# Mutation
type CreateTaskPayload {
    task: Task
    response: String
}

type LikeTaskPayload {
    task: Task
    response: String
}

type DeleteTaskPayload {
    response: String
}

# Query
type Task {
    id: ID!
    task: String!
    image: String
    done: Boolean!
    type: String
    source: String
    hidden: Boolean!
    done_at: DateTime
    user: User @belongsTo
    product: Product @belongsTo
    hasLiked: Boolean @field(resolver: "App\\GraphQL\\Queries\\TaskQuery@hasLiked")
    comments: [Comment!]! @hasMany(type: SIMPLE)
    likes: [User!]! @hasMany(relation: "likers", type: "connection")
    created_at: DateTime! @cache(maxAge: 3600)
    updated_at: DateTime! @cache(maxAge: 3600)
}

# Mutation

# Create Task - createTask
input CreateTaskInput {
    task: String! @rules(apply: ["min:3", "max:5000"])
    done: Boolean!
}

# Delete Task - deleteTask
input DeleteTaskInput {
    id: Int!
}

type TaskPayload {
    task: Task
    status: Boolean!
    message: String!
}
