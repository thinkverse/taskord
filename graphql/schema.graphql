"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    users: [User!]! @paginate(defaultCount: 10)
    user(id: ID @eq): User @find
    products: [Product!]! @paginate(defaultCount: 10)
    product(id: ID @eq): Product @find
    productUpdates: [ProductUpdate!]! @paginate(defaultCount: 10)
    productUpdate(id: ID @eq): ProductUpdate @find
    tasks: [Task!]! @paginate(defaultCount: 10)
    task(id: ID @eq): Task @find
    comments: [Comment!]! @paginate(defaultCount: 10)
    comment(id: ID @eq): Comment @find
    questions: [Question!]! @paginate(defaultCount: 10)
    question(id: ID @eq): Question @find
    answers: [Answer!]! @paginate(defaultCount: 10)
    answer(id: ID @eq): Answer @find
}

type User {
    id: ID!
    username: String!
    firstname: String
    lastname: String
    avatar: String
    bio: String
    location: String
    company: String
    website: String
    twitter: String
    twitch: String
    telegram: String
    github: String
    youtube: String
    reputation: Int!
    isStaff: Boolean!
    isVerified: Boolean!
    isDeveloper: Boolean!
    isBeta: Boolean!
    isPatron: Boolean!
    isPrivate: Boolean!
    tasks: [Task!]! @hasMany
    comments: [Comment!]! @hasMany
    ownedProducts: [Product!]! @hasMany
    products: [Product!]! @belongsToMany
    questions: [Question!]! @hasMany
    answers: [Answer!]! @hasMany
    productCount: Int! @count(relation: "products")
    taskCount: Int! @count(relation: "tasks")
    commentCount: Int! @count(relation: "comments")
    questionCount: Int! @count(relation: "questions")
    answerCount: Int! @count(relation: "answers")
    created_at: DateTime!
    updated_at: DateTime!
}

type Product {
    id: ID!
    slug: String!
    name: String
    avatar: String
    description: String
    website: String
    twitter: String
    github: String
    producthunt: String
    launched: Boolean!
    launched_at: DateTime
    owner: User @belongsTo
    tasks: [Task!]! @hasMany
    created_at: DateTime!
    updated_at: DateTime
}

type ProductUpdate {
    id: ID!
    title: String!
    body: String
    user: User @belongsTo
    product: Product @belongsTo
    created_at: DateTime!
    updated_at: DateTime
}

type Task {
    id: ID!
    task: String!
    image: String
    done: Boolean!
    type: String
    source: String
    done_at: DateTime!
    user: User @belongsTo
    product: Product @belongsTo
    comments: [Comment!]! @hasMany
    created_at: DateTime!
    updated_at: DateTime!
}

type Comment {
    id: ID!
    comment: String!
    user: User @belongsTo
    task: Task @belongsTo
    created_at: DateTime!
    updated_at: DateTime!
}

type Question {
    id: ID!
    title: String!
    body: String
    patronOnly: Boolean!
    user: User @belongsTo
    answer: [Answer!]! @hasMany
    created_at: DateTime!
    updated_at: DateTime!
}

type Answer {
    id: ID!
    answer: String!
    user: User @belongsTo
    question: Question @belongsTo
    created_at: DateTime!
    updated_at: DateTime!
}
