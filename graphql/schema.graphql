"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    me: User @auth(guard: "api")
    users: [User!]! @paginate(defaultCount: 10)
    user(id: ID @eq): User @find
    products: [Product!]! @paginate(defaultCount: 10)
    product(id: ID @eq): Product @find
    productUpdates: [ProductUpdate!]! @paginate(defaultCount: 10)
    productUpdate(id: ID @eq): ProductUpdate @find
    tasks: [Task!]! @paginate(defaultCount: 10)
    task(id: ID @eq): Task @find
    comments: [Comment!]! @paginate(defaultCount: 10)
    comment(id: ID @eq): Comment @find
    questions: [Question!]! @paginate(defaultCount: 10)
    question(id: ID @eq): Question @find
    answers: [Answer!]! @paginate(defaultCount: 10)
    answer(id: ID @eq): Answer @find
}

type Mutation {
    login(
        email: String!,
        password: String!
    ): LoginPayload @field(resolver: "AuthMutator")
    createTask(
        task: String!,
        done: Boolean!
        source: String!
    ): CreateTaskPayload @field(resolver: "TaskMutator")
}

type LoginPayload {
    user: User
    token: String
    response: String
}

type CreateTaskPayload {
    task: Task
    response: String
}

#import user.graphql
#import product.graphql
#import productupdate.graphql
#import task.graphql
#import comment.graphql
#import question.graphql
#import answer.graphql
